{"version":3,"sources":["RootMenu.js","RootIntro.js","RootPlayStats.js","RootFeed.js","RootPoints.js","RootForm.js","RootRecommendation.js","RootStats.js","App.js","serviceWorker.js","index.js","staticdata_root.js","staticdata_vast.js"],"names":["rootRulesLink","require","vastRulesLink","RootMenu","this","props","game","_this$props","onSelectGame","onShowView","react_default","a","createElement","Menu","stackable","Item","as","href","chooseRulesLink","target","content","RootMenu_MenuGame","name","RootMenu_MenuRight","Component","MenuGame","_ref","capitalizedGameName","toUpperCase","slice","active","onClick","handleFileSelected","e","reader","FileReader","onload","files","localStorage","setItem","result","readAsText","MenuRight","_ref2","data","encodeURIComponent","getItem","position","htmlFor","className","type","id","style","display","onChange","download","rootLogo","vastLogo","RootIntro","Image","key","centered","size","src","chooseLogo","src_RootMenu","factionsOptions","rootFactionsOptions","RootPlayStats","winner","session","index","findIndex","f","value","image","points","length","RootPlayStats_TurnsScoreGraph","RootPlayStats_FinalScoreGraph","Fragment","Modal","Header","date","Content","wrapped","getWinnerImage","Description","setWhichGraph","TurnsScoreGraph","factions","played_factions","label_data","forEach","i","faction","push","y","text","fill","concat","color","Object","keys","map","turn","x","Number","session_dataset","transformPoints","createLabels","victory_chart","containerComponent","victory_voronoi_container","voronoiDimension","labels","d","labelComponent","victory_tooltip","cornerRadius","flyoutStyle","victory_label","player_points","victory_line","domain","animate","stroke","FinalScoreGraph","parseInt","domainPadding","victory_axis","grid","strokeWidth","dependentAxis","tickLabels","padding","angle","verticalAnchor","textAnchor","victory_bar","alignment","charactersOptions","vastCharactersOptions","logged_data","searchWinner","choosePlayers","find","player","Event","playedFactionsLength","message","time_elapsed","Date","days_elapsed","Math","floor","Feed","Summary","GameSessionModal","state","_this","handleOpen","setState","defineProperty","handleClose","trigger","RootFeed_Event","src_RootPlayStats","RootFeed","JSON","parse","divider","Divider","RootFeed_GameSessionModal","RootPoints","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChangeNumberOfTurns","prepareRows","onToggle","prevState","_ref3","onGridRowsUpdated","_ref4","fromRow","toRow","updated","number","values","isNaN","handleChange","rows","objectSpread","prepareValue","editable","number_of_turns","_this$props2","checked","_this$state","_this$props3","domination","handleChangePoints","not_domination","Form","Group","widths","Checkbox","label","Input","min","placeholder","Field","react_data_grid_default","columns","toConsumableArray","rowGetter","rowsCount","minHeight","enableCellSelect","max","root_data","rootMapOptions","rootDeckOptions","RootForm","deck","options","rating","searchQuery","handleChangeFactions","selected_factions","v","match","handleSearchChange","handleSubmit","state_copy","data_stored","stringify","chooseOptions","handleRate","_ref5","chooseTypeName","prevProps","headerMessage","typeName","typePlaceHolder","root_components","src_RootPoints","Dropdown","fluid","selection","search","onSearchChange","Message","attached","header","onSubmit","multiple","Rating","icon","maxRating","onRate","Button","playersReach","rootPlayersReach","RootRecommendationComponent","multiplayerRecommendation","selected","randomInReach","colortext","Icon","number_of_players","randoms","isArraySumHigher","r","random","indexOf","number_array","reach_values","reach","reduce","b","negative","List","info","RootRecommendation","max_number_of_players","setMaxNumberOfPlayers","_this2","RootRecommendation_RootRecommendationComponent","getCurrentGamePlays","filter","logged_play","RootStats","countWinners","count_wins","log","element","handleClick","mutation","datum","winners","RootStats_StatsMaxMin","storedData","victory_pie","width","events","eventHandlers","SimpleStatistic","Statistic","Value","Label","StatsMaxMin","array","apply","o","includes","Boolean","number_wins","number_plays","countPlaysWithElement","percent_wins","getPercentWin","findElementWithValue","findMaxValue","findMinValue","max_loggedplays","getMaxPercentWin","min_loggedplays","getMinPercentWin","most_wins","RootStats_SimpleStatistic","least_wins","most_percent_wins","least_percent_wins","App","selectedgame","view","handleSelectGame","handleShowView","src_RootStats","src_RootRecommendation","src_RootForm","src_RootFeed","setContent","Container","src_RootIntro","isLocalhost","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker","exports","2","3","4","5","6"],"mappings":"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","file":"static/js/main.39ff7a6b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nconst rootRulesLink = require(\"./staticdata_root\").rootRulesLink;\r\nconst vastRulesLink = require(\"./staticdata_vast\").vastRulesLink;\r\n\r\nclass RootMenu extends Component {\r\n  chooseRulesLink() {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return rootRulesLink;\r\n      case \"vast\":\r\n        return vastRulesLink;\r\n      default:\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { game, onSelectGame, onShowView } = this.props;\r\n\r\n    return (\r\n      <Menu stackable>\r\n        <Menu.Item\r\n          as=\"a\"\r\n          href={this.chooseRulesLink()}\r\n          target=\"_blank\"\r\n          content=\"Rules\"\r\n        />\r\n        <MenuGame name=\"root\" game={game} onSelectGame={onSelectGame} />\r\n        <MenuGame name=\"vast\" game={game} onSelectGame={onSelectGame} />\r\n        <MenuRight onShowView={onShowView} />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nconst MenuGame = ({ name, game, onSelectGame }) => {\r\n  const capitalizedGameName = name[0].toUpperCase() + name.slice(1);\r\n  return (\r\n    <Menu.Item\r\n      name={name}\r\n      active={game === name}\r\n      content={capitalizedGameName}\r\n      onClick={onSelectGame}\r\n    />\r\n  );\r\n};\r\n\r\nfunction handleFileSelected(e) {\r\n  const reader = new FileReader();\r\n  reader.onload = (theFile => {\r\n    return function(e) {\r\n      localStorage.setItem(\"logged_data\", e.target.result);\r\n    };\r\n  })(e.target.files[0]);\r\n\r\n  reader.readAsText(e.target.files[0]);\r\n}\r\n\r\nconst MenuRight = ({ onShowView }) => {\r\n  var data =\r\n    \"text/json;charset=utf-8,\" +\r\n    encodeURIComponent(localStorage.getItem(\"logged_data\"));\r\n\r\n  return (\r\n    <Menu.Menu position=\"right\">\r\n      <Menu.Item\r\n        content=\"Recommendation\"\r\n        name=\"recommendation\"\r\n        onClick={onShowView}\r\n      />\r\n      <Menu.Item content=\"Stats\" name=\"stats\" onClick={onShowView} />\r\n      <Menu.Item as=\"label\" htmlFor=\"file\" className=\"ui icon button\">\r\n        Import\r\n        <input\r\n          type=\"file\"\r\n          id=\"file\"\r\n          style={{ display: \"none\" }}\r\n          onChange={handleFileSelected}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        as=\"a\"\r\n        href={\"data:\" + data}\r\n        download=\"rootlogger_data.json\"\r\n        content=\"Export\"\r\n      />\r\n    </Menu.Menu>\r\n  );\r\n};\r\n\r\nexport default RootMenu;\r\n","import React, { Component } from \"react\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport RootMenu from \"./RootMenu\";\r\n\r\nconst rootLogo = require(\"./staticdata_root\").rootLogo;\r\nconst vastLogo = require(\"./staticdata_vast\").vastLogo;\r\n\r\nclass RootIntro extends Component {\r\n  chooseLogo() {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return rootLogo;\r\n      case \"vast\":\r\n        return vastLogo;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { game, onSelectGame, onShowView } = this.props;\r\n    return [\r\n      <Image key=\"logo\" centered size=\"medium\" src={this.chooseLogo()} />,\r\n      <RootMenu\r\n        key=\"menu\"\r\n        game={game}\r\n        onSelectGame={onSelectGame}\r\n        onShowView={onShowView}\r\n      />\r\n    ];\r\n  }\r\n}\r\n\r\nexport default RootIntro;\r\n","import React, { Component } from \"react\";\r\nimport { Image, Modal } from \"semantic-ui-react\";\r\nimport {\r\n  VictoryAxis,\r\n  VictoryBar,\r\n  VictoryChart,\r\n  VictoryLabel,\r\n  VictoryLine,\r\n  VictoryTooltip,\r\n  VictoryVoronoiContainer\r\n} from \"victory\";\r\n\r\nconst factionsOptions = require(\"./staticdata_root\").rootFactionsOptions;\r\n\r\nclass RootPlayStats extends Component {\r\n  getWinnerImage(winner) {\r\n    const { session } = this.props;\r\n    const index = factionsOptions.findIndex(f => f.value === session.winner);\r\n    return index >= 0 ? factionsOptions[index].image : null;\r\n  }\r\n\r\n  setWhichGraph() {\r\n    const { session } = this.props;\r\n    if (!session.points) return;\r\n    if (session.points.length > 1) {\r\n      return <TurnsScoreGraph session={this.props.session} />;\r\n    } else {\r\n      return <FinalScoreGraph session={this.props.session} />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { session } = this.props;\r\n    return (\r\n      <>\r\n        <Modal.Header>{session.date}</Modal.Header>\r\n        <Modal.Content image>\r\n          <Image\r\n            wrapped\r\n            size=\"medium\"\r\n            src={this.getWinnerImage(session.winner)}\r\n          />\r\n          <Modal.Description>{this.setWhichGraph()}</Modal.Description>\r\n        </Modal.Content>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass TurnsScoreGraph extends Component {\r\n  createLabels() {\r\n    const { session } = this.props;\r\n    const factions = session.played_factions;\r\n    var label_data = [];\r\n    factions.forEach((key, i) => {\r\n      const index = factionsOptions.findIndex(f => f.value === key);\r\n      const faction = factionsOptions[index];\r\n      label_data.push({\r\n        key: i,\r\n        y: 10 + i * 20,\r\n        text: faction.text,\r\n        fill: `#${faction.color}`\r\n      });\r\n    });\r\n    return label_data;\r\n  }\r\n\r\n  transformPoints() {\r\n    const { session } = this.props;\r\n    const points = session.points[0];\r\n    return Object.keys(points).map(key => {\r\n      if (key !== \"turn\") {\r\n        const index = factionsOptions.findIndex(f => f.value === key);\r\n        const faction = factionsOptions[index];\r\n        return session.points.map((turn, index) => {\r\n          return {\r\n            x: index + 1,\r\n            y: Number(turn[key]),\r\n            color: `#${faction.color}`\r\n          };\r\n        });\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const session_dataset = this.transformPoints();\r\n    const label_data = this.createLabels();\r\n    return (\r\n      <VictoryChart\r\n        containerComponent={\r\n          <VictoryVoronoiContainer\r\n            voronoiDimension=\"x\"\r\n            labels={d => `y: ${d.y}`}\r\n            labelComponent={\r\n              <VictoryTooltip\r\n                cornerRadius={0}\r\n                flyoutStyle={{ fill: \"white\" }}\r\n              />\r\n            }\r\n          />\r\n        }\r\n      >\r\n        {label_data.map(faction => (\r\n          <VictoryLabel\r\n            key={faction.text}\r\n            x={60}\r\n            y={faction.y}\r\n            text={faction.text}\r\n            style={{ fill: faction.fill }}\r\n          />\r\n        ))}\r\n        {session_dataset.map((player_points, index) => {\r\n          if (player_points != null) {\r\n            const color = player_points[0].color || \"black\";\r\n            return (\r\n              <VictoryLine\r\n                key={index}\r\n                data={player_points}\r\n                domain={{ y: [0, 30] }}\r\n                animate\r\n                style={{\r\n                  data: { stroke: color },\r\n                  labels: { fill: color }\r\n                }}\r\n              />\r\n            );\r\n          } else return null;\r\n        })}\r\n      </VictoryChart>\r\n    );\r\n  }\r\n}\r\n\r\nclass FinalScoreGraph extends Component {\r\n  transformPoints() {\r\n    const { session } = this.props;\r\n    const points = session.points[0];\r\n    return Object.keys(points).map(key => {\r\n      if (key !== \"turn\") {\r\n        const index = factionsOptions.findIndex(f => f.value === key);\r\n        const faction = factionsOptions[index];\r\n        return {\r\n          x: faction.text,\r\n          y: parseInt(points[key], 10),\r\n          fill: `#${faction.color}`\r\n        };\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <VictoryChart domainPadding={{ x: 20 }}>\r\n        <VictoryAxis\r\n          style={{\r\n            grid: { stroke: \"#B3E5FC\", strokeWidth: 0.25 }\r\n          }}\r\n          dependentAxis\r\n        />\r\n        <VictoryAxis\r\n          style={{\r\n            tickLabels: {\r\n              padding: 1,\r\n              angle: 10,\r\n              verticalAnchor: \"middle\",\r\n              textAnchor: \"start\"\r\n            }\r\n          }}\r\n        />\r\n        <VictoryBar\r\n          style={{\r\n            data: { fill: d => d.fill }\r\n          }}\r\n          data={this.transformPoints()}\r\n          animate\r\n          alignment=\"start\"\r\n        />\r\n      </VictoryChart>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootPlayStats;\r\n","import React, { Component } from \"react\";\r\nimport { Divider, Feed, Modal } from \"semantic-ui-react\";\r\nimport RootPlayStats from \"./RootPlayStats\";\r\n\r\nconst factionsOptions = require(\"./staticdata_root\").rootFactionsOptions;\r\nconst charactersOptions = require(\"./staticdata_vast\").vastCharactersOptions;\r\n\r\nfunction choosePlayers(logged_data) {\r\n  switch (logged_data.game) {\r\n    case \"root\":\r\n      return factionsOptions;\r\n    case \"vast\":\r\n      return charactersOptions;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nfunction winner(logged_data) {\r\n  const searchWinner = choosePlayers(logged_data).find(\r\n    player => player.value === logged_data.winner\r\n  );\r\n  return typeof searchWinner == \"undefined\" ? { text: \"No one\" } : searchWinner;\r\n}\r\n\r\nconst Event = ({ logged_data, onClick }) => {\r\n  const playedFactionsLength =\r\n    typeof logged_data.played_factions == \"undefined\"\r\n      ? \".\"\r\n      : \" of \" + logged_data.played_factions.length + \" players.\";\r\n\r\n  const message =\r\n    winner(logged_data).text + \" won a game\" + playedFactionsLength;\r\n\r\n  const current_time = new Date();\r\n  const logged_time = new Date(logged_data.date);\r\n  const time_elapsed = current_time - logged_time;\r\n  const days_elapsed = Math.floor(time_elapsed / 1000 / 60 / 60 / 24);\r\n\r\n  return (\r\n    <Feed.Event onClick={onClick}>\r\n      <Feed.Content>\r\n        <Feed.Summary content={message} date={days_elapsed + \" days ago\"} />\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  );\r\n};\r\n\r\nclass GameSessionModal extends Component {\r\n  state = {\r\n    [this.props.index]: false\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({ [this.props.index]: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ [this.props.index]: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        trigger={\r\n          <Event logged_data={this.props.session} onClick={this.handleOpen} />\r\n        }\r\n      >\r\n        <RootPlayStats session={this.props.session} />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass RootFeed extends Component {\r\n  state = {\r\n    data: JSON.parse(localStorage.getItem(\"logged_data\")) || []\r\n  };\r\n\r\n  render() {\r\n    const divider =\r\n      typeof this.state.data !== \"undefined\" && this.state.data.length > 0 ? (\r\n        <Divider />\r\n      ) : null;\r\n\r\n    return (\r\n      <>\r\n        {divider}\r\n        <Feed>\r\n          {this.state.data.map((session, index) => (\r\n            <GameSessionModal key={index} index={index} session={session} />\r\n          ))}\r\n        </Feed>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootFeed;\r\n","import React, { Component } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\n\r\nclass RootPoints extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false,\r\n      number_of_turns: 1\r\n    };\r\n    this.prepareRows(1);\r\n  }\r\n\r\n  handleChangeNumberOfTurns = (e, { name, value }) => {\r\n    value = Number(value);\r\n    this.prepareRows(value);\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onToggle = (e, { name }) => {\r\n    this.setState(\r\n      prevState => ({\r\n        [name]: !prevState[name],\r\n        number_of_turns: 1\r\n      }),\r\n      this.prepareRows(1)\r\n    );\r\n  };\r\n\r\n  onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\r\n    var number = Object.values(updated)[0];\r\n    if (!isNaN(number)) {\r\n      const { handleChange, points } = this.props;\r\n      const rows = points.slice();\r\n      number = number > 30 ? \"30\" : \"\" + number < 0 ? \"0\" : \"\" + number;\r\n      updated[Object.keys(updated)[0]] = number;\r\n      for (let i = fromRow; i <= toRow; i++) {\r\n        rows[i] = { ...rows[i], ...updated };\r\n      }\r\n      handleChange({}, { name: \"points\", value: rows });\r\n    }\r\n  };\r\n\r\n  prepareValue = () => {\r\n    var { value } = this.props;\r\n    if (value != null) {\r\n      value.forEach(player => {\r\n        player.name = player.text;\r\n        player.editable = \"true\";\r\n      });\r\n    }\r\n    return value;\r\n  };\r\n\r\n  prepareRows = number_of_turns => {\r\n    var rows = [];\r\n    var keys = {};\r\n    var { handleChange, value } = this.props;\r\n    if (value != null) {\r\n      value.forEach(player => (keys[player.key] = 0));\r\n    }\r\n    for (var i = 0; i < number_of_turns; i++) {\r\n      rows.push({ turn: i + 1, ...keys });\r\n    }\r\n    handleChange({}, { name: \"points\", value: rows });\r\n  };\r\n\r\n  render() {\r\n    const { checked, number_of_turns } = this.state;\r\n    const { domination, handleChange, handleChangePoints, points } = this.props;\r\n\r\n    var value = this.prepareValue();\r\n    var not_domination = !domination;\r\n\r\n    return (\r\n      value && (\r\n        <>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Checkbox\r\n              label=\"Domination Win\"\r\n              onChange={handleChange}\r\n              name=\"domination\"\r\n              value={not_domination}\r\n              checked={domination}\r\n            />\r\n            <Form.Checkbox\r\n              label=\"Victory Points per Turn\"\r\n              onChange={this.onToggle}\r\n              name=\"checked\"\r\n              checked={checked}\r\n            />\r\n            {this.state.checked && (\r\n              <Form.Input\r\n                key=\"nturns\"\r\n                label=\"Number of Turns\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                name=\"number_of_turns\"\r\n                value={number_of_turns}\r\n                placeholder=\"1\"\r\n                onChange={this.handleChangeNumberOfTurns}\r\n              />\r\n            )}\r\n          </Form.Group>\r\n          {this.state.checked ? (\r\n            <Form.Field>\r\n              <ReactDataGrid\r\n                columns={[{ key: \"turn\", name: \"Turn\" }, ...value]}\r\n                rowGetter={i => points[i]}\r\n                rowsCount={number_of_turns}\r\n                minHeight={35 * (number_of_turns + 1)}\r\n                onGridRowsUpdated={this.onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n              />\r\n            </Form.Field>\r\n          ) : (\r\n            <Form.Group widths=\"equal\">\r\n              {value.map(faction => (\r\n                <Form.Input\r\n                  key={faction.value}\r\n                  label={`${faction.text} Points`}\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"30\"\r\n                  value={points.length > 0 ? points[0][faction.value] : 0}\r\n                  name={faction.value}\r\n                  placeholder={`${faction.text} Points`}\r\n                  onChange={handleChangePoints}\r\n                />\r\n              ))}\r\n            </Form.Group>\r\n          )}\r\n        </>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootPoints;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Message, Rating } from \"semantic-ui-react\";\r\nimport RootPoints from \"./RootPoints\";\r\n\r\nconst root_data = require(\"./staticdata_root\");\r\nconst factionsOptions = root_data.rootFactionsOptions;\r\nconst rootMapOptions = root_data.rootMapOptions;\r\nconst rootDeckOptions = root_data.rootDeckOptions;\r\nconst vast_data = require(\"./staticdata_vast\");\r\nconst charactersOptions = vast_data.vastCharactersOptions;\r\n\r\nclass RootForm extends Component {\r\n  state = {\r\n    date: \"\",\r\n    deck: null,\r\n    domination: false,\r\n    map: null,\r\n    options: factionsOptions,\r\n    points: [],\r\n    rating: 0,\r\n    searchQuery: null,\r\n    value: null,\r\n    winner: null\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.game !== prevProps.game) {\r\n      this.setState({\r\n        deck: null,\r\n        domination: false,\r\n        map: null,\r\n        options: this.chooseOptions(),\r\n        played_factions: [],\r\n        points: [],\r\n        rating: 0,\r\n        searchQuery: null,\r\n        value: null,\r\n        winner: null\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\r\n  handleChangeFactions = (e, { value }) => {\r\n    var selected_factions = [];\r\n    value.forEach(v => {\r\n      const match = this.state.options.find(f => f.key === v);\r\n      selected_factions.push(match);\r\n      return match;\r\n    });\r\n    this.setState({ played_factions: value, value: selected_factions });\r\n  };\r\n  handleChangePoints = (e, { name, value }) =>\r\n    this.setState({\r\n      points: [\r\n        {\r\n          ...this.state.points[0],\r\n          [name]: value\r\n        }\r\n      ]\r\n    });\r\n  handleSearchChange = (e, { searchQuery }) => this.setState({ searchQuery });\r\n  handleSubmit = () => {\r\n    const state_copy = {\r\n      ...this.state,\r\n      game: this.props.game\r\n    };\r\n    delete state_copy.options;\r\n    delete state_copy.searchQuery;\r\n    delete state_copy.value;\r\n\r\n    const data_stored = JSON.parse(localStorage.getItem(\"logged_data\")) || [];\r\n    data_stored.push(state_copy);\r\n    localStorage.setItem(\"logged_data\", JSON.stringify(data_stored));\r\n\r\n    this.setState({\r\n      date: \"\",\r\n      deck: null,\r\n      domination: false,\r\n      map: null,\r\n      options: this.chooseOptions(),\r\n      played_factions: [],\r\n      rating: 0,\r\n      searchQuery: null,\r\n      value: null,\r\n      winner: null\r\n    });\r\n  };\r\n  handleRate = (e, { rating }) => this.setState({ rating });\r\n\r\n  chooseOptions = () => {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return factionsOptions;\r\n      case \"vast\":\r\n        return charactersOptions;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  chooseTypeName = () => {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return \"Factions\";\r\n      case \"vast\":\r\n        return \"Characters\";\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      deck,\r\n      domination,\r\n      map,\r\n      options,\r\n      points,\r\n      played_factions,\r\n      rating,\r\n      value,\r\n      winner\r\n    } = this.state;\r\n    const capitalizedGameName =\r\n      this.props.game[0].toUpperCase() + this.props.game.slice(1);\r\n    const headerMessage = `Welcome to ${capitalizedGameName} Logger!`;\r\n    const typeName = this.chooseTypeName();\r\n    const typePlaceHolder = `Select the ${typeName}`;\r\n\r\n    var root_components = this.props.game === \"root\" && (\r\n      <>\r\n        <RootPoints\r\n          handleChange={this.handleChange}\r\n          handleChangePoints={this.handleChangePoints}\r\n          domination={domination}\r\n          points={points}\r\n          value={value}\r\n        />\r\n        <Form.Dropdown\r\n          label=\"Map\"\r\n          fluid=\"fluid\"\r\n          selection=\"selection\"\r\n          search=\"search\"\r\n          options={rootMapOptions}\r\n          value={map}\r\n          name=\"map\"\r\n          placeholder=\"Select the Map\"\r\n          onChange={this.handleChange}\r\n          onSearchChange={this.handleSearchChange}\r\n        />\r\n        <Form.Dropdown\r\n          label=\"Deck\"\r\n          fluid=\"fluid\"\r\n          selection=\"selection\"\r\n          search=\"search\"\r\n          options={rootDeckOptions}\r\n          value={deck}\r\n          name=\"deck\"\r\n          placeholder=\"Select the Deck\"\r\n          onChange={this.handleChange}\r\n          onSearchChange={this.handleSearchChange}\r\n        />\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Message\r\n          attached\r\n          header={headerMessage}\r\n          content=\"Fill out the form below to log your play\"\r\n        />\r\n        <Form className=\"attached fluid segment\" onSubmit={this.handleSubmit}>\r\n          <Form.Input\r\n            label=\"Date\"\r\n            fluid=\"fluid\"\r\n            type=\"datetime-local\"\r\n            name=\"date\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <Form.Dropdown\r\n            label={typeName}\r\n            fluid=\"fluid\"\r\n            selection=\"selection\"\r\n            multiple=\"multiple\"\r\n            search=\"search\"\r\n            options={options}\r\n            value={played_factions}\r\n            placeholder={typePlaceHolder}\r\n            onChange={this.handleChangeFactions}\r\n            onSearchChange={this.handleSearchChange}\r\n          />\r\n          <Form.Dropdown\r\n            label=\"Winner\"\r\n            fluid=\"fluid\"\r\n            selection=\"selection\"\r\n            search=\"search\"\r\n            options={value}\r\n            value={winner}\r\n            name=\"winner\"\r\n            placeholder=\"Select the Winner\"\r\n            onChange={this.handleChange}\r\n            onSearchChange={this.handleSearchChange}\r\n          />\r\n          {root_components}\r\n          <Form.Input label=\"Rating\">\r\n            <Rating\r\n              icon=\"star\"\r\n              maxRating={5}\r\n              rating={rating}\r\n              onRate={this.handleRate}\r\n            />\r\n          </Form.Input>\r\n          <Form.Button type=\"submit\">Submit</Form.Button>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootForm;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Message, Rating } from \"semantic-ui-react\";\r\n\r\nconst root_data = require(\"./staticdata_root\");\r\nconst factionsOptions = root_data.rootFactionsOptions;\r\nconst playersReach = root_data.rootPlayersReach;\r\nconst vast_data = require(\"./staticdata_vast\");\r\nconst charactersOptions = vast_data.vastCharactersOptions;\r\n\r\nclass RootRecommendationComponent extends Component {\r\n  state = {\r\n    data: JSON.parse(localStorage.getItem(\"logged_data\")) || []\r\n  };\r\n\r\n  chooseOptions = () => {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return factionsOptions;\r\n      case \"vast\":\r\n        return charactersOptions;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  randomInReach() {\r\n    const { number_of_players } = this.props;\r\n    const options = this.chooseOptions();\r\n    var randoms = [];\r\n    while (!this.isArraySumHigher(randoms)) {\r\n      randoms = [];\r\n      while (randoms.length < number_of_players) {\r\n        var r = Math.floor(Math.random() * options.length);\r\n        if (randoms.indexOf(r) === -1) randoms.push(r);\r\n      }\r\n    }\r\n    return randoms;\r\n  }\r\n\r\n  isArraySumHigher(number_array) {\r\n    const { number_of_players } = this.props;\r\n    const options = this.chooseOptions();\r\n    const reach_values = [];\r\n    number_array.forEach(id => reach_values.push(options[id].reach || 99));\r\n    const sum = reach_values.reduce((a, b) => a + b, 0);\r\n    return sum >= playersReach[number_of_players];\r\n  }\r\n\r\n  multiplayerRecommendation = () => {\r\n    const options = this.chooseOptions();\r\n    var selected = [];\r\n    const selected_factions = this.randomInReach();\r\n    selected_factions.forEach(id =>\r\n      selected.push(\r\n        <Message icon key={id} color={options[id].colortext}>\r\n          <Icon name=\"user\" />\r\n          <Message.Content>{options[id].text}</Message.Content>\r\n        </Message>\r\n      )\r\n    );\r\n    return selected;\r\n  };\r\n\r\n  render() {\r\n    const { number_of_players } = this.props;\r\n    switch (number_of_players) {\r\n      case 1:\r\n        return (\r\n          <Message negative>\r\n            <Message.Header content=\"A solo player can only play against the Automatas\" />\r\n            <Message.List>\r\n              <Message.Item content=\"You can select your favourite factions!\" />\r\n              <Message.Item content=\"Any of the automatas is compatible with any faction.\" />\r\n            </Message.List>\r\n          </Message>\r\n        );\r\n      case 0:\r\n        return (\r\n          <Message info>\r\n            <Message.Header content=\"Please select the number of players for this session\" />\r\n            <Message.Content content=\"You can select your favourite factions!\" />\r\n          </Message>\r\n        );\r\n      default:\r\n        return this.multiplayerRecommendation();\r\n    }\r\n  }\r\n}\r\n\r\nclass RootRecommendation extends Component {\r\n  state = {\r\n    options: factionsOptions,\r\n    max_number_of_players: 6,\r\n    number_of_players: 0\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.game !== prevProps.game) {\r\n      this.setState({\r\n        max_number_of_players: this.setMaxNumberOfPlayers(),\r\n        number_of_players: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  setMaxNumberOfPlayers = () => {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return 6;\r\n      case \"vast\":\r\n        return 5;\r\n      default:\r\n        return 1;\r\n    }\r\n  };\r\n\r\n  handleRate = (e, { rating }) => this.setState({ number_of_players: rating });\r\n\r\n  render() {\r\n    const { max_number_of_players, number_of_players } = this.state;\r\n    const capitalizedGameName =\r\n      this.props.game[0].toUpperCase() + this.props.game.slice(1);\r\n    const headerMessage = `Welcome to ${capitalizedGameName} Logger!`;\r\n\r\n    return (\r\n      <>\r\n        <Message\r\n          attached\r\n          header={headerMessage}\r\n          content=\"Fill the settings to generate a new session\"\r\n        />\r\n        <Form className=\"attached fluid segment\">\r\n          <Form.Input label=\"Number of Players\">\r\n            <Rating\r\n              icon=\"star\"\r\n              maxRating={max_number_of_players}\r\n              rating={number_of_players}\r\n              onRate={this.handleRate}\r\n            />\r\n          </Form.Input>\r\n          <RootRecommendationComponent\r\n            game={this.props.game}\r\n            number_of_players={number_of_players}\r\n          />\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootRecommendation;\r\n","import React, { Component } from \"react\";\r\nimport { Statistic } from \"semantic-ui-react\";\r\nimport { VictoryPie } from \"victory\";\r\n\r\nconst factionsOptions = require(\"./staticdata_root\").rootFactionsOptions;\r\nconst charactersOptions = require(\"./staticdata_vast\").vastCharactersOptions;\r\n\r\nfunction chooseOptions(game) {\r\n  switch (game) {\r\n    case \"root\":\r\n      return factionsOptions;\r\n    case \"vast\":\r\n      return charactersOptions;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nfunction getCurrentGamePlays(data, game) {\r\n  return data.filter(logged_play => logged_play.game === game);\r\n}\r\n\r\nfunction removeZeros(log) {\r\n  return log.filter(element => element.y > 0);\r\n}\r\n\r\nclass RootStats extends Component {\r\n  state = {\r\n    data: JSON.parse(localStorage.getItem(\"logged_data\")) || []\r\n  };\r\n\r\n  countWinners = () => {\r\n    const options = chooseOptions(this.props.game);\r\n\r\n    return removeZeros(\r\n      options.map(faction => {\r\n        var count_wins = getCurrentGamePlays(\r\n          this.state.data,\r\n          this.props.game\r\n        ).filter(log => log.winner === faction.value).length;\r\n        return {\r\n          x: faction.text,\r\n          y: count_wins,\r\n          fill: faction.color,\r\n          value: faction.value\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  handleClick = () => [\r\n    {\r\n      target: \"data\",\r\n      mutation: props => {\r\n        const stroke = props.style && props.style.stroke;\r\n        return stroke === \"#c43a31\"\r\n          ? null\r\n          : {\r\n              style: { stroke: \"#c43a31\", fill: props.style.fill }\r\n            };\r\n      }\r\n    },\r\n    {\r\n      target: \"labels\",\r\n      mutation: props =>\r\n        props.text === props.datum.y ? null : { text: props.datum.y }\r\n    }\r\n  ];\r\n\r\n  render() {\r\n    const winners = this.countWinners();\r\n    return (\r\n      <>\r\n        <StatsMaxMin\r\n          game={this.props.game}\r\n          options={chooseOptions(this.props.game)}\r\n          data={winners}\r\n          storedData={this.state.data}\r\n        />\r\n        <VictoryPie\r\n          width={550}\r\n          data={winners}\r\n          events={[\r\n            {\r\n              target: \"data\",\r\n              eventHandlers: {\r\n                onClick: this.handleClick\r\n              }\r\n            }\r\n          ]}\r\n          style={{ data: { fill: d => d.fill } }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst SimpleStatistic = ({ value, text, label, color }) => (\r\n  <Statistic>\r\n    <Statistic.Value style={{ color: `#${color ? color : null}` }}>\r\n      {value}\r\n    </Statistic.Value>\r\n    <Statistic.Value style={{ color: `#${color ? color : null}` }} text>\r\n      {text}\r\n    </Statistic.Value>\r\n    <Statistic.Label>{label}</Statistic.Label>\r\n  </Statistic>\r\n);\r\n\r\nclass StatsMaxMin extends Component {\r\n  findMaxValue(array) {\r\n    return Math.max.apply(Math, array.map(o => o.y));\r\n  }\r\n\r\n  findMinValue(array) {\r\n    return Math.min.apply(Math, array.map(o => o.y));\r\n  }\r\n\r\n  findElementWithText(array, text) {\r\n    return array.find(o => o.x === text);\r\n  }\r\n  findElementWithValue(array, value) {\r\n    return array.find(o => o.y === value);\r\n  }\r\n\r\n  countPlaysWithElement(value) {\r\n    const didPlay = getCurrentGamePlays(\r\n      this.props.storedData,\r\n      this.props.game\r\n    ).map(o => (o.played_factions ? o.played_factions.includes(value) : false));\r\n    return didPlay.filter(Boolean).length;\r\n  }\r\n\r\n  getPercentWin() {\r\n    return this.props.options.map(faction => {\r\n      const number_wins = getCurrentGamePlays(\r\n        this.props.storedData,\r\n        this.props.game\r\n      )\r\n        .filter(log => log.winner === faction.value)\r\n        .filter(Boolean).length;\r\n\r\n      const number_plays = this.countPlaysWithElement(faction.value);\r\n      return number_plays !== 0 ? number_wins / number_plays : 0;\r\n    });\r\n  }\r\n\r\n  getMaxPercentWin() {\r\n    const percent_wins = this.getPercentWin();\r\n    const index = percent_wins.indexOf(Math.max(...percent_wins));\r\n    return [this.props.options[index], percent_wins[index]];\r\n  }\r\n  getMinPercentWin() {\r\n    const percent_wins = this.getPercentWin();\r\n    const index = percent_wins.indexOf(Math.min(...percent_wins));\r\n    return [this.props.options[index], percent_wins[index]];\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    const max = this.findElementWithValue(data, this.findMaxValue(data));\r\n    const min = this.findElementWithValue(data, this.findMinValue(data));\r\n    const max_loggedplays = this.getMaxPercentWin();\r\n    const min_loggedplays = this.getMinPercentWin();\r\n\r\n    const most_wins = max ? (\r\n      <SimpleStatistic\r\n        value={max.y}\r\n        text={max.x}\r\n        label={\"Most Wins\"}\r\n        color={max.fill}\r\n      />\r\n    ) : null;\r\n\r\n    const least_wins = min ? (\r\n      <SimpleStatistic\r\n        value={min.y}\r\n        text={min.x}\r\n        label={\"Least Wins\"}\r\n        color={min.fill}\r\n      />\r\n    ) : null;\r\n\r\n    const most_percent_wins = max_loggedplays ? (\r\n      <SimpleStatistic\r\n        value={Math.floor(100 * max_loggedplays[1]) + \"%\"}\r\n        text={max_loggedplays[0].text}\r\n        label={\"Most Wins of Played Games\"}\r\n        color={max_loggedplays[0].color}\r\n      />\r\n    ) : null;\r\n    const least_percent_wins = min_loggedplays ? (\r\n      <SimpleStatistic\r\n        value={Math.floor(100 * min_loggedplays[1]) + \"%\"}\r\n        text={min_loggedplays[0].text}\r\n        label={\"Least Wins of Played Games\"}\r\n        color={min_loggedplays[0].color}\r\n      />\r\n    ) : null;\r\n\r\n    return (\r\n      <Statistic.Group widths=\"2\">\r\n        {most_wins}\r\n        {least_wins}\r\n        {most_percent_wins}\r\n        {least_percent_wins}\r\n      </Statistic.Group>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootStats;\r\n","import React, { Component } from \"react\";\r\nimport RootIntro from \"./RootIntro\";\r\nimport RootFeed from \"./RootFeed\";\r\nimport RootForm from \"./RootForm\";\r\nimport RootRecommendation from \"./RootRecommendation\";\r\nimport RootStats from \"./RootStats\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nclass App extends Component {\r\n  state = { selectedgame: \"root\", view: \"form\" };\r\n\r\n  handleSelectGame = (e, { name }) => this.setState({ selectedgame: name });\r\n  handleShowView = (e, { name }) => {\r\n    const { view } = this.state;\r\n    view === name\r\n      ? this.setState({ view: \"form\" })\r\n      : this.setState({ view: name });\r\n  };\r\n\r\n  setContent() {\r\n    const { selectedgame, view } = this.state;\r\n    switch (view) {\r\n      case \"stats\":\r\n        return <RootStats game={selectedgame} />;\r\n      case \"recommendation\":\r\n        return <RootRecommendation game={selectedgame} />;\r\n      case \"form\":\r\n      default:\r\n        return (\r\n          <>\r\n            <RootForm game={selectedgame} />\r\n            <RootFeed />\r\n          </>\r\n        );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedgame } = this.state;\r\n    var content = this.setContent();\r\n\r\n    return (\r\n      <Container>\r\n        <RootIntro\r\n          game={selectedgame}\r\n          onSelectGame={this.handleSelectGame}\r\n          onShowView={this.handleShowView}\r\n        />\r\n        {content}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n","const rootLogo =\r\n  \"https://cf.geekdo-images.com/imagepage/img/RhpM7ioEqBhBuSOwMpN5Vcqcztk=/fit-in/900x600/filters:no_upscale()/pic3791326.jpg\";\r\n\r\nconst rootRulesLink = \"http://root.livingrules.io/\";\r\n\r\nconst rootPlayersReach = {2: 17, 3: 18, 4: 21, 5: 25, 6: 28};\r\n\r\nconst rootFactionsOptions = [\r\n  {\r\n    key: \"mc\",\r\n    value: \"mc\",\r\n    text: \"Marquise de Cat\",\r\n    reach: 10,\r\n    color: \"EC7A21\",\r\n    colortext: \"orange\",\r\n    image:\r\n      \"https://ledergames.com/w/wp-content/uploads/2019/03/The-Marquise-de-Cat.png\"\r\n  },\r\n  {\r\n    key: \"ed\",\r\n    value: \"ed\",\r\n    text: \"Eyrie Dynasties\",\r\n    reach: 7,\r\n    color: \"26447D\",\r\n    colortext: \"blue\",\r\n    image:\r\n      \"https://ledergames.com/w/wp-content/uploads/2019/03/The-Eyrie-Dynasties.png\"\r\n  },\r\n  {\r\n    key: \"wa\",\r\n    value: \"wa\",\r\n    text: \"Woodland Alliance\",\r\n    reach: 3,\r\n    color: \"60B657\",\r\n    colortext: \"green\",\r\n    image:\r\n      \"https://ledergames.com/w/wp-content/uploads/2019/03/The-Woodland-Alliance.png\"\r\n  },\r\n  {\r\n    key: \"vb\",\r\n    value: \"vb\",\r\n    text: \"Vagabond\",\r\n    reach: 5,\r\n    color: \"8A8987\",\r\n    colortext: \"grey\",\r\n    image:\r\n      \"https://ledergames.com/w/wp-content/uploads/2019/03/The-Vagabond.png\"\r\n  },\r\n  {\r\n    key: \"lc\",\r\n    value: \"lc\",\r\n    text: \"Lizard Cult\",\r\n    reach: 2,\r\n    color: \"F4EF6F\",\r\n    colortext: \"yellow\",\r\n    image: \"https://ledergames.com/w/wp-content/uploads/2019/03/Lizard-Cult.jpg\"\r\n  },\r\n  {\r\n    key: \"rc\",\r\n    value: \"rc\",\r\n    text: \"Riverfolk Company\",\r\n    reach: 5,\r\n    color: \"FFF59D\",\r\n    colortext: \"teal\",\r\n    image:\r\n      \"https://ledergames.com/w/wp-content/uploads/2019/03/Riverfolk-Company.jpg\"\r\n  },\r\n  {\r\n    key: \"cc\",\r\n    value: \"cc\",\r\n    text: \"Corvid Conspiracy\",\r\n    reach: 3,\r\n    color: \"56489F\",\r\n    colortext: \"violet\",\r\n    image: \"https://ledergames.com/w/wp-content/uploads/2019/03/Crow.jpg\"\r\n  },\r\n  {\r\n    key: \"gc\",\r\n    value: \"gc\",\r\n    text: \"The Great Dutchy\",\r\n    reach: 8,\r\n    color: \"CA8245\",\r\n    colortext: \"brown\",\r\n    image: \"https://ledergames.com/w/wp-content/uploads/2019/03/Mole.jpg\"\r\n  }\r\n];\r\n\r\nconst rootMapOptions = [\r\n  {key: \"a\", value: \"a\", text: \"Autumn\"},\r\n  {key: \"w\", value: \"w\", text: \"Winter\"},\r\n  {key: \"m\", value: \"m\", text: \"Mountain\"},\r\n  {key: \"l\", value: \"l\", text: \"Lake\"}\r\n];\r\n\r\nconst rootDeckOptions = [\r\n  {key: \"d\", value: \"d\", text: \"Default\"},\r\n  {key: \"ep\", value: \"ep\", text: \"Exiles & Partisans\"}\r\n];\r\n\r\nexports.rootLogo = rootLogo;\r\nexports.rootRulesLink = rootRulesLink;\r\nexports.rootPlayersReach = rootPlayersReach;\r\nexports.rootFactionsOptions = rootFactionsOptions;\r\nexports.rootMapOptions = rootMapOptions;\r\nexports.rootDeckOptions = rootDeckOptions;\r\n","const vastLogo =\r\n  \"https://cf.geekdo-images.com/imagepage/img/d_-BA8wyApUR45GfQFcAKYulbOU=/fit-in/900x600/filters:no_upscale()/pic2962290.jpg\";\r\n\r\nconst vastRulesLink =\r\n  \"https://boardgamegeek.com/filepage/136381/rules-summaries-and-one-pagers\";\r\n\r\nconst vastCharactersOptions = [\r\n  {\r\n    key: \"kn\",\r\n    value: \"kn\",\r\n    text: \"Knight\",\r\n    color: \"DDAB28\",\r\n    colortext: \"yellow\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTzU3jrdXB5EVP540NLcz1N0-Y5fOUIdYEy5MeFvtrwyXaOLqcP\"\r\n  },\r\n  {\r\n    key: \"pa\",\r\n    value: \"pa\",\r\n    text: \"Paladin\",\r\n    color: \"997E19\",\r\n    colortext: \"yellow\",\r\n    image:\r\n      \"https://cf.geekdo-images.com/imagepage/img/bDzo6b-V_fvEpufrWiKTgSAa9q8=/fit-in/900x600/filters:no_upscale()/pic4151593.png\"\r\n  },\r\n  {\r\n    key: \"gb\",\r\n    value: \"gb\",\r\n    text: \"Goblins\",\r\n    color: \"6FBF4B\",\r\n    colortext: \"green\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTVb46COElYmNenCpiBhAYYkv0yl5E4QTK10kzrG32M82JIY1Hx\"\r\n  },\r\n  {\r\n    key: \"sk\",\r\n    value: \"sk\",\r\n    text: \"Skeletons\",\r\n    color: \"0A4721\",\r\n    colortext: \"green\",\r\n    image:\r\n      \"https://cf.geekdo-images.com/imagepage/img/EJ65HKvEOkEEQbz-Q2NT0_zaSWM=/fit-in/900x600/filters:no_upscale()/pic4151592.png\"\r\n  },\r\n  {\r\n    key: \"go\",\r\n    value: \"go\",\r\n    text: \"Ghoul\",\r\n    color: \"F96C4C\",\r\n    colortext: \"orange\",\r\n    image:\r\n      \"https://cf.geekdo-images.com/imagepage/img/b6IKKg1vqY_oBIDYaEjFfksUn8o=/fit-in/900x600/filters:no_upscale()/pic3343034.jpg\"\r\n  },\r\n  {\r\n    key: \"dg\",\r\n    value: \"dg\",\r\n    text: \"Dragon\",\r\n    color: \"CF202E\",\r\n    colortext: \"red\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSdNMTZAokJFirw3Er_TAo2i1CY08z6epqM4MBa9FekOPylomqGlng0V5s\"\r\n  },\r\n  {\r\n    key: \"nu\",\r\n    value: \"nu\",\r\n    text: \"Nightmare Unicorn\",\r\n    color: \"944D51\",\r\n    colortext: \"red\",\r\n    image:\r\n      \"https://cf.geekdo-images.com/imagepage/img/oH04KivYLOC8pyZ6VR09QSeqDYk=/fit-in/900x600/filters:no_upscale()/pic3343040.jpg\"\r\n  },\r\n  {\r\n    key: \"sp\",\r\n    value: \"sp\",\r\n    text: \"Spider\",\r\n    color: \"8D0103\",\r\n    colortext: \"red\",\r\n    image:\r\n      \"https://cf.geekdo-images.com/imagepage/img/oul-pAZVzh3ak5Gu13UzYW8XPRI=/fit-in/900x600/filters:no_upscale()/pic4151595.png\"\r\n  },\r\n  {\r\n    key: \"cv\",\r\n    value: \"cv\",\r\n    text: \"Cave\",\r\n    color: \"5F2E7E\",\r\n    colortext: \"purple\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXZvU982DsIYOTIsvS1KPlMEhRKNJPlYgCj9gE2pw0xmg6kXNKnw\"\r\n  },\r\n  {\r\n    key: \"gh\",\r\n    value: \"gh\",\r\n    text: \"Ghost\",\r\n    color: \"5BA0AF\",\r\n    colortext: \"blue\",\r\n    image:\r\n      \"https://cf.geekdo-images.com/imagepage/img/IxF8mVtwO-liR0Nkj8eG6mGewgw=/fit-in/900x600/filters:no_upscale()/pic3343029.jpg\"\r\n  },\r\n  {\r\n    key: \"mn\",\r\n    value: \"mn\",\r\n    text: \"Manor\",\r\n    color: \"511471\",\r\n    colortext: \"purple\",\r\n    image:\r\n      \"https://cf.geekdo-images.com/imagepage/img/mLDhZMKwNoZar7Ees9VOCK5f-Co=/fit-in/900x600/filters:no_upscale()/pic4151591.png\"\r\n  },\r\n  {\r\n    key: \"tf\",\r\n    value: \"tf\",\r\n    text: \"Thief\",\r\n    color: \"777679\",\r\n    colortext: \"grey\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSw_ZCZ64uW9eWhEy9TK6zeBNOwaQZYr7eIqYyr_3iuu4hwVRybiw\"\r\n  },\r\n  {\r\n    key: \"ec\",\r\n    value: \"ec\",\r\n    text: \"Enchanter\",\r\n    color: \"787A77\",\r\n    colortext: \"grey\",\r\n    image:\r\n      \"https://cf.geekdo-images.com/imagepage/img/yhrgOxqxFzvF1YehogSp4wVffww=/fit-in/900x600/filters:no_upscale()/pic4151590.png\"\r\n  }\r\n];\r\n\r\nexports.vastLogo = vastLogo;\r\nexports.vastRulesLink = vastRulesLink;\r\nexports.vastCharactersOptions = vastCharactersOptions;\r\n"],"sourceRoot":""}