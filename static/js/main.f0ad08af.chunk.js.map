{"version":3,"sources":["RootMenu.js","RootIntro.js","RootForm.js","App.js","serviceWorker.js","index.js"],"names":["RootMenu","_this$props","this","props","game","onSelectGame","react_default","a","createElement","Menu","Item","as","href","content","name","active","onClick","Component","RootIntro","Image","centered","size","src","chooseLogo","src_RootMenu","factionsOptions","key","value","text","rootMapOptions","rootDeckOptions","charactersOptions","RootForm","state","deck","map","options","searchQuery","winner","handleChange","e","_ref","_this","setState","Object","defineProperty","handleChangeFactions","_ref2","selected_factions","forEach","v","match","find","f","push","played_factions","handleSearchChange","_ref3","toggleSearch","search","target","checked","chooseOptions","prevProps","_this$state","Form","Dropdown","fluid","selection","multiple","placeholder","onChange","onSearchChange","Fragment","Button","type","App","selectedgame","handleSelectGame","Container","src_RootIntro","src_RootForm","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f0ad08af.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nclass RootMenu extends Component {\r\n  render() {\r\n    const { game, onSelectGame } = this.props;\r\n\r\n    return (\r\n      <Menu>\r\n        <Menu.Item as=\"a\" href=\"http://root.livingrules.io/\" content=\"Rules\" />\r\n\r\n        <Menu.Item\r\n          name=\"root\"\r\n          active={game === \"root\"}\r\n          content=\"Root\"\r\n          onClick={onSelectGame}\r\n        />\r\n\r\n        <Menu.Item\r\n          name=\"vast\"\r\n          active={game === \"vast\"}\r\n          content=\"Vast\"\r\n          onClick={onSelectGame}\r\n        />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootMenu;\r\n","import React, { Component } from \"react\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport RootMenu from \"./RootMenu\";\r\n\r\nconst rootLogo =\r\n  \"https://cf.geekdo-images.com/imagepage/img/RhpM7ioEqBhBuSOwMpN5Vcqcztk=/fit-in/900x600/filters:no_upscale()/pic3791326.jpg\";\r\nconst vastLogo =\r\n  \"https://cf.geekdo-images.com/imagepage/img/d_-BA8wyApUR45GfQFcAKYulbOU=/fit-in/900x600/filters:no_upscale()/pic2962290.jpg\";\r\n\r\nclass RootIntro extends Component {\r\n  chooseLogo() {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return rootLogo;\r\n      case \"vast\":\r\n        return vastLogo;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return [\r\n      <Image centered size=\"medium\" src={this.chooseLogo()} />,\r\n      <RootMenu game={this.props.game} onSelectGame={this.props.onSelectGame} />\r\n    ];\r\n  }\r\n}\r\n\r\nexport default RootIntro;\r\n","import React, { Component } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst factionsOptions = [\r\n  { key: \"mc\", value: \"mc\", text: \"Marquise de Cat\" },\r\n  { key: \"ed\", value: \"ed\", text: \"Eyrie Dynasties\" },\r\n  { key: \"wa\", value: \"wa\", text: \"Woodland Alliance\" },\r\n  { key: \"vb\", value: \"vb\", text: \"Vagabond\" },\r\n  { key: \"lc\", value: \"lc\", text: \"Lizard Cult\" },\r\n  { key: \"rc\", value: \"rc\", text: \"Riverfolk Company\" },\r\n  { key: \"cc\", value: \"cc\", text: \"Corvid Conspiracy\" },\r\n  { key: \"gc\", value: \"gc\", text: \"The Great Dutchy\" }\r\n];\r\n\r\nconst rootMapOptions = [\r\n  { key: \"d\", value: \"d\", text: \"Default\" },\r\n  { key: \"w\", value: \"w\", text: \"Winter\" },\r\n  { key: \"m\", value: \"m\", text: \"Mountain\" },\r\n  { key: \"l\", value: \"l\", text: \"Lake\" }\r\n];\r\n\r\nconst rootDeckOptions = [\r\n  { key: \"d\", value: \"d\", text: \"Default\" },\r\n  { key: \"ep\", value: \"ep\", text: \"Exiles & Partisans\" }\r\n];\r\n\r\nconst charactersOptions = [\r\n  { key: \"kn\", value: \"kn\", text: \"Knight\" },\r\n  { key: \"pa\", value: \"pa\", text: \"Paladin\" },\r\n  { key: \"gb\", value: \"gb\", text: \"Goblins\" },\r\n  { key: \"sk\", value: \"sk\", text: \"Skeletons\" },\r\n  { key: \"dg\", value: \"dg\", text: \"Dragon\" },\r\n  { key: \"sp\", value: \"sp\", text: \"Spider\" },\r\n  { key: \"cv\", value: \"cv\", text: \"Cave\" },\r\n  { key: \"mn\", value: \"mn\", text: \"Manor\" },\r\n  { key: \"tf\", value: \"tf\", text: \"Thief\" },\r\n  { key: \"ec\", value: \"ec\", text: \"Enchanter\" }\r\n];\r\n\r\nclass RootForm extends Component {\r\n  state = {\r\n    deck: null,\r\n    map: null,\r\n    options: factionsOptions,\r\n    searchQuery: null,\r\n    value: null,\r\n    winner: null\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.game !== prevProps.game) {\r\n      this.setState({\r\n        deck: null,\r\n        map: null,\r\n        options: this.chooseOptions(),\r\n        played_factions: [],\r\n        searchQuery: null,\r\n        value: null,\r\n        winner: null\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\r\n  handleChangeFactions = (e, { value }) => {\r\n    var selected_factions = [];\r\n    value.forEach(v => {\r\n      const match = this.state.options.find(f => f.key === v);\r\n      selected_factions.push(match);\r\n      return match;\r\n    });\r\n    this.setState({ played_factions: value, value: selected_factions });\r\n  };\r\n  handleSearchChange = (e, { searchQuery }) => this.setState({ searchQuery });\r\n\r\n  toggleSearch = e => this.setState({ search: e.target.checked });\r\n\r\n  chooseOptions = () => {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return factionsOptions;\r\n      case \"vast\":\r\n        return charactersOptions;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { deck, map, options, played_factions, value, winner } = this.state;\r\n\r\n    return (\r\n      <Form>\r\n        <Form.Dropdown\r\n          fluid\r\n          selection\r\n          multiple\r\n          search\r\n          options={options}\r\n          value={played_factions}\r\n          placeholder=\"Select the Factions\"\r\n          onChange={this.handleChangeFactions}\r\n          onSearchChange={this.handleSearchChange}\r\n        />\r\n        <Form.Dropdown\r\n          fluid\r\n          selection\r\n          search\r\n          options={value}\r\n          value={winner}\r\n          name=\"winner\"\r\n          placeholder=\"Select the Winner\"\r\n          onChange={this.handleChange}\r\n          onSearchChange={this.handleSearchChange}\r\n        />\r\n        {this.props.game === \"root\" && (\r\n          <>\r\n            <Form.Dropdown\r\n              fluid\r\n              selection\r\n              search\r\n              options={rootMapOptions}\r\n              value={map}\r\n              name=\"map\"\r\n              placeholder=\"Select the Map\"\r\n              onChange={this.handleChange}\r\n              onSearchChange={this.handleSearchChange}\r\n            />\r\n            <Form.Dropdown\r\n              fluid\r\n              selection\r\n              search\r\n              options={rootDeckOptions}\r\n              value={deck}\r\n              name=\"deck\"\r\n              placeholder=\"Select the Deck\"\r\n              onChange={this.handleChange}\r\n              onSearchChange={this.handleSearchChange}\r\n            />\r\n          </>\r\n        )}\r\n        <Form.Button type=\"submit\">Submit</Form.Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootForm;\r\n","import React, { Component } from \"react\";\r\nimport RootIntro from \"./RootIntro\";\r\nimport RootForm from \"./RootForm\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nclass App extends Component {\r\n  state = { selectedgame: \"root\" };\r\n\r\n  handleSelectGame = (e, { name }) => this.setState({ selectedgame: name });\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <RootIntro\r\n          game={this.state.selectedgame}\r\n          onSelectGame={this.handleSelectGame}\r\n        />\r\n        <RootForm game={this.state.selectedgame} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}