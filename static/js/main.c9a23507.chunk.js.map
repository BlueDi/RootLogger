{"version":3,"sources":["RootMenu.js","RootIntro.js","RootFeed.js","RootForm.js","App.js","serviceWorker.js","index.js"],"names":["RootMenu","this","props","game","_this$props","onSelectGame","react_default","a","createElement","Menu","Item","as","href","chooseRulesLink","target","content","name","active","onClick","Component","RootIntro","Image","key","centered","size","src","chooseLogo","src_RootMenu","factionsOptions","value","text","charactersOptions","Event","_ref","logged_data","message","choosePlayers","find","player","winner","played_factions","length","time_elapsed","Date","date","days_elapsed","Math","floor","Feed","Content","Summary","RootFeed","state","data","JSON","parse","localStorage","getItem","divider","Divider","Fragment","map","play","index","RootFeed_Event","rootMapOptions","rootDeckOptions","RootForm","deck","options","searchQuery","handleChange","e","_this","setState","Object","defineProperty","handleChangeFactions","_ref2","selected_factions","forEach","v","match","f","push","handleSearchChange","_ref3","handleSubmit","state_copy","objectSpread","data_stored","setItem","stringify","chooseOptions","chooseTypeName","prevProps","_this$state","capitalizedGameName","toUpperCase","slice","headerMessage","concat","typeName","typePlaceHolder","Message","attached","header","Form","className","onSubmit","Input","label","fluid","type","onChange","Dropdown","selection","multiple","search","placeholder","onSearchChange","Button","App","selectedgame","handleSelectGame","Container","src_RootIntro","src_RootForm","src_RootFeed","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c9a23507.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nconst rootRulesLink = \"http://root.livingrules.io/\";\r\nconst vastRulesLink =\r\n  \"https://boardgamegeek.com/filepage/136381/rules-summaries-and-one-pagers\";\r\n\r\nclass RootMenu extends Component {\r\n  chooseRulesLink() {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return rootRulesLink;\r\n      case \"vast\":\r\n        return vastRulesLink;\r\n      default:\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { game, onSelectGame } = this.props;\r\n\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          as=\"a\"\r\n          href={this.chooseRulesLink()}\r\n          target=\"_blank\"\r\n          content=\"Rules\"\r\n        />\r\n\r\n        <Menu.Item\r\n          name=\"root\"\r\n          active={game === \"root\"}\r\n          content=\"Root\"\r\n          onClick={onSelectGame}\r\n        />\r\n\r\n        <Menu.Item\r\n          name=\"vast\"\r\n          active={game === \"vast\"}\r\n          content=\"Vast\"\r\n          onClick={onSelectGame}\r\n        />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootMenu;\r\n","import React, { Component } from \"react\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport RootMenu from \"./RootMenu\";\r\n\r\nconst rootLogo =\r\n  \"https://cf.geekdo-images.com/imagepage/img/RhpM7ioEqBhBuSOwMpN5Vcqcztk=/fit-in/900x600/filters:no_upscale()/pic3791326.jpg\";\r\nconst vastLogo =\r\n  \"https://cf.geekdo-images.com/imagepage/img/d_-BA8wyApUR45GfQFcAKYulbOU=/fit-in/900x600/filters:no_upscale()/pic2962290.jpg\";\r\n\r\nclass RootIntro extends Component {\r\n  chooseLogo() {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return rootLogo;\r\n      case \"vast\":\r\n        return vastLogo;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return [\r\n      <Image key=\"logo\" centered size=\"medium\" src={this.chooseLogo()} />,\r\n      <RootMenu\r\n        key=\"menu\"\r\n        game={this.props.game}\r\n        onSelectGame={this.props.onSelectGame}\r\n      />\r\n    ];\r\n  }\r\n}\r\n\r\nexport default RootIntro;\r\n","import React, {Component} from \"react\";\r\nimport {Divider, Feed} from \"semantic-ui-react\";\r\n\r\nconst factionsOptions = [\r\n  {key: \"mc\", value: \"mc\", text: \"Marquise de Cat\"},\r\n  {key: \"ed\", value: \"ed\", text: \"Eyrie Dynasties\"},\r\n  {key: \"wa\", value: \"wa\", text: \"Woodland Alliance\"},\r\n  {key: \"vb\", value: \"vb\", text: \"Vagabond\"},\r\n  {key: \"lc\", value: \"lc\", text: \"Lizard Cult\"},\r\n  {key: \"rc\", value: \"rc\", text: \"Riverfolk Company\"},\r\n  {key: \"cc\", value: \"cc\", text: \"Corvid Conspiracy\"},\r\n  {key: \"gc\", value: \"gc\", text: \"The Great Dutchy\"}\r\n];\r\n\r\nconst charactersOptions = [\r\n  {key: \"kn\", value: \"kn\", text: \"Knight\"},\r\n  {key: \"pa\", value: \"pa\", text: \"Paladin\"},\r\n  {key: \"gb\", value: \"gb\", text: \"Goblins\"},\r\n  {key: \"sk\", value: \"sk\", text: \"Skeletons\"},\r\n  {key: \"dg\", value: \"dg\", text: \"Dragon\"},\r\n  {key: \"sp\", value: \"sp\", text: \"Spider\"},\r\n  {key: \"cv\", value: \"cv\", text: \"Cave\"},\r\n  {key: \"mn\", value: \"mn\", text: \"Manor\"},\r\n  {key: \"tf\", value: \"tf\", text: \"Thief\"},\r\n  {key: \"ec\", value: \"ec\", text: \"Enchanter\"}\r\n];\r\n\r\nconst Event = ({logged_data}) => {\r\n  const choosePlayers = () => {\r\n    switch (logged_data.game) {\r\n      case \"root\":\r\n        return factionsOptions;\r\n      case \"vast\":\r\n        return charactersOptions;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const winner = choosePlayers().find(\r\n    player => player.value === logged_data.winner\r\n  );\r\n\r\n  const message =\r\n    winner.text +\r\n    \" won a game of \" +\r\n    logged_data.played_factions.length +\r\n    \" players.\";\r\n\r\n  const current_time = new Date();\r\n  const logged_time = new Date(logged_data.date);\r\n  const time_elapsed = current_time - logged_time;\r\n  const days_elapsed = Math.floor(time_elapsed / 1000 / 60 / 60 / 24);\r\n\r\n  return (\r\n    <Feed.Event>\r\n      <Feed.Content>\r\n        <Feed.Summary content={message} date={days_elapsed + \" days ago\"} />\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  );\r\n};\r\n\r\nclass RootFeed extends Component {\r\n  state = {\r\n    data: JSON.parse(localStorage.getItem(\"logged_data\")) || []\r\n  };\r\n\r\n  render() {\r\n    const divider =\r\n      typeof this.state.data !== \"undefined\" && this.state.data.length > 0 ? (\r\n        <Divider />\r\n      ) : null;\r\n\r\n    return (\r\n      <>\r\n        {divider}\r\n        <Feed>\r\n          {this.state.data.map((play, index) => (\r\n            <Event key={index} logged_data={play} />\r\n          ))}\r\n        </Feed>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootFeed;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Message } from \"semantic-ui-react\";\r\n\r\nconst factionsOptions = [\r\n  { key: \"mc\", value: \"mc\", text: \"Marquise de Cat\" },\r\n  { key: \"ed\", value: \"ed\", text: \"Eyrie Dynasties\" },\r\n  { key: \"wa\", value: \"wa\", text: \"Woodland Alliance\" },\r\n  { key: \"vb\", value: \"vb\", text: \"Vagabond\" },\r\n  { key: \"lc\", value: \"lc\", text: \"Lizard Cult\" },\r\n  { key: \"rc\", value: \"rc\", text: \"Riverfolk Company\" },\r\n  { key: \"cc\", value: \"cc\", text: \"Corvid Conspiracy\" },\r\n  { key: \"gc\", value: \"gc\", text: \"The Great Dutchy\" }\r\n];\r\n\r\nconst rootMapOptions = [\r\n  { key: \"d\", value: \"d\", text: \"Default\" },\r\n  { key: \"w\", value: \"w\", text: \"Winter\" },\r\n  { key: \"m\", value: \"m\", text: \"Mountain\" },\r\n  { key: \"l\", value: \"l\", text: \"Lake\" }\r\n];\r\n\r\nconst rootDeckOptions = [\r\n  { key: \"d\", value: \"d\", text: \"Default\" },\r\n  { key: \"ep\", value: \"ep\", text: \"Exiles & Partisans\" }\r\n];\r\n\r\nconst charactersOptions = [\r\n  { key: \"kn\", value: \"kn\", text: \"Knight\" },\r\n  { key: \"pa\", value: \"pa\", text: \"Paladin\" },\r\n  { key: \"gb\", value: \"gb\", text: \"Goblins\" },\r\n  { key: \"sk\", value: \"sk\", text: \"Skeletons\" },\r\n  { key: \"dg\", value: \"dg\", text: \"Dragon\" },\r\n  { key: \"sp\", value: \"sp\", text: \"Spider\" },\r\n  { key: \"cv\", value: \"cv\", text: \"Cave\" },\r\n  { key: \"mn\", value: \"mn\", text: \"Manor\" },\r\n  { key: \"tf\", value: \"tf\", text: \"Thief\" },\r\n  { key: \"ec\", value: \"ec\", text: \"Enchanter\" }\r\n];\r\n\r\nclass RootForm extends Component {\r\n  state = {\r\n    date: \"\",\r\n    deck: null,\r\n    map: null,\r\n    options: factionsOptions,\r\n    searchQuery: null,\r\n    value: null,\r\n    winner: null\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.game !== prevProps.game) {\r\n      this.setState({\r\n        deck: null,\r\n        map: null,\r\n        options: this.chooseOptions(),\r\n        played_factions: [],\r\n        searchQuery: null,\r\n        value: null,\r\n        winner: null\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\r\n  handleChangeFactions = (e, { value }) => {\r\n    var selected_factions = [];\r\n    value.forEach(v => {\r\n      const match = this.state.options.find(f => f.key === v);\r\n      selected_factions.push(match);\r\n      return match;\r\n    });\r\n    this.setState({ played_factions: value, value: selected_factions });\r\n  };\r\n  handleSearchChange = (e, { searchQuery }) => this.setState({ searchQuery });\r\n\r\n  handleSubmit = () => {\r\n    const state_copy = { ...this.state, game: this.props.game };\r\n    delete state_copy.options;\r\n    delete state_copy.searchQuery;\r\n    delete state_copy.value;\r\n\r\n    const data_stored = JSON.parse(localStorage.getItem(\"logged_data\")) || [];\r\n    data_stored.push(state_copy);\r\n    localStorage.setItem(\"logged_data\", JSON.stringify(data_stored));\r\n\r\n    this.setState({\r\n      date: \"\",\r\n      deck: null,\r\n      map: null,\r\n      options: this.chooseOptions(),\r\n      played_factions: [],\r\n      searchQuery: null,\r\n      value: null,\r\n      winner: null\r\n    });\r\n  };\r\n\r\n  chooseOptions = () => {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return factionsOptions;\r\n      case \"vast\":\r\n        return charactersOptions;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  chooseTypeName = () => {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return \"Factions\";\r\n      case \"vast\":\r\n        return \"Characters\";\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { deck, map, options, played_factions, value, winner } = this.state;\r\n    const capitalizedGameName =\r\n      this.props.game[0].toUpperCase() + this.props.game.slice(1);\r\n    const headerMessage = `Welcome to ${capitalizedGameName} Logger!`;\r\n    const typeName = this.chooseTypeName();\r\n    const typePlaceHolder = `Select the ${typeName}`;\r\n\r\n    return (\r\n      <>\r\n        <Message\r\n          attached\r\n          header={headerMessage}\r\n          content=\"Fill out the form below to log your play\"\r\n        />\r\n        <Form className=\"attached fluid segment\" onSubmit={this.handleSubmit}>\r\n          <Form.Input\r\n            label=\"Date\"\r\n            fluid\r\n            type=\"datetime-local\"\r\n            name=\"date\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <Form.Dropdown\r\n            label={typeName}\r\n            fluid\r\n            selection\r\n            multiple\r\n            search\r\n            options={options}\r\n            value={played_factions}\r\n            placeholder={typePlaceHolder}\r\n            onChange={this.handleChangeFactions}\r\n            onSearchChange={this.handleSearchChange}\r\n          />\r\n          <Form.Dropdown\r\n            label=\"Winner\"\r\n            fluid\r\n            selection\r\n            search\r\n            options={value}\r\n            value={winner}\r\n            name=\"winner\"\r\n            placeholder=\"Select the Winner\"\r\n            onChange={this.handleChange}\r\n            onSearchChange={this.handleSearchChange}\r\n          />\r\n          {this.props.game === \"root\" && (\r\n            <>\r\n              <Form.Dropdown\r\n                label=\"Map\"\r\n                fluid\r\n                selection\r\n                search\r\n                options={rootMapOptions}\r\n                value={map}\r\n                name=\"map\"\r\n                placeholder=\"Select the Map\"\r\n                onChange={this.handleChange}\r\n                onSearchChange={this.handleSearchChange}\r\n              />\r\n              <Form.Dropdown\r\n                label=\"Deck\"\r\n                fluid\r\n                selection\r\n                search\r\n                options={rootDeckOptions}\r\n                value={deck}\r\n                name=\"deck\"\r\n                placeholder=\"Select the Deck\"\r\n                onChange={this.handleChange}\r\n                onSearchChange={this.handleSearchChange}\r\n              />\r\n            </>\r\n          )}\r\n          <Form.Button type=\"submit\">Submit</Form.Button>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootForm;\r\n","import React, { Component } from \"react\";\r\nimport RootIntro from \"./RootIntro\";\r\nimport RootFeed from \"./RootFeed\";\r\nimport RootForm from \"./RootForm\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nclass App extends Component {\r\n  state = { selectedgame: \"root\" };\r\n\r\n  handleSelectGame = (e, { name }) => this.setState({ selectedgame: name });\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <RootIntro\r\n          game={this.state.selectedgame}\r\n          onSelectGame={this.handleSelectGame}\r\n        />\r\n        <RootForm game={this.state.selectedgame} />\r\n        <RootFeed />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}