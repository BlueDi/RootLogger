{"version":3,"sources":["RootMenu.js","RootIntro.js","RootFeed.js","RootForm.js","RootStats.js","App.js","serviceWorker.js","index.js"],"names":["RootMenu","this","props","game","_this$props","onSelectGame","onShowStats","react_default","a","createElement","Menu","Item","as","href","chooseRulesLink","target","content","RootMenu_MenuGame","name","RootMenu_MenuRight","Component","MenuGame","_ref","capitalizedGameName","toUpperCase","slice","active","onClick","handleFileSelected","e","reader","FileReader","onload","files","localStorage","setItem","result","readAsText","MenuRight","_ref2","data","encodeURIComponent","getItem","position","htmlFor","className","type","id","style","display","onChange","download","RootIntro","Image","key","centered","size","src","chooseLogo","src_RootMenu","factionsOptions","value","text","charactersOptions","winner","logged_data","searchWinner","choosePlayers","find","player","Event","playedFactionsLength","played_factions","length","message","time_elapsed","Date","date","days_elapsed","Math","floor","Feed","Content","Summary","RootFeed","state","JSON","parse","divider","Divider","Fragment","map","play","index","RootFeed_Event","rootMapOptions","rootDeckOptions","RootForm","deck","options","searchQuery","handleChange","_this","setState","Object","defineProperty","handleChangeFactions","selected_factions","forEach","v","match","f","push","handleSearchChange","_ref3","handleSubmit","state_copy","objectSpread","data_stored","stringify","chooseOptions","chooseTypeName","prevProps","_this$state","headerMessage","concat","typeName","typePlaceHolder","Message","attached","header","Form","onSubmit","Input","label","fluid","Dropdown","selection","multiple","search","placeholder","onSearchChange","Button","color","RootStats","getCurrentGamePlays","filter","logged_play","countWinners","removeZeros","faction","count_wins","log","x","y","fill","handleClick","mutation","stroke","datum","element","victory_pie","width","containerComponent","victory_container","events","eventHandlers","d","App","selectedgame","showStats","handleSelectGame","handleShowStats","src_RootStats","src_RootForm","src_RootFeed","Container","src_RootIntro","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.601044b5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nconst rootRulesLink = \"http://root.livingrules.io/\";\r\nconst vastRulesLink =\r\n  \"https://boardgamegeek.com/filepage/136381/rules-summaries-and-one-pagers\";\r\n\r\nclass RootMenu extends Component {\r\n  chooseRulesLink() {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return rootRulesLink;\r\n      case \"vast\":\r\n        return vastRulesLink;\r\n      default:\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { game, onSelectGame, onShowStats } = this.props;\r\n\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          as=\"a\"\r\n          href={this.chooseRulesLink()}\r\n          target=\"_blank\"\r\n          content=\"Rules\"\r\n        />\r\n        <MenuGame name=\"root\" game={game} onSelectGame={onSelectGame} />\r\n        <MenuGame name=\"vast\" game={game} onSelectGame={onSelectGame} />\r\n        <MenuRight onShowStats={onShowStats} />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nconst MenuGame = ({ name, game, onSelectGame }) => {\r\n  const capitalizedGameName = name[0].toUpperCase() + name.slice(1);\r\n  return (\r\n    <Menu.Item\r\n      name={name}\r\n      active={game === name}\r\n      content={capitalizedGameName}\r\n      onClick={onSelectGame}\r\n    />\r\n  );\r\n};\r\n\r\nfunction handleFileSelected(e) {\r\n  const reader = new FileReader();\r\n  reader.onload = (theFile => {\r\n    return function(e) {\r\n      localStorage.setItem(\"logged_data\", e.target.result);\r\n    };\r\n  })(e.target.files[0]);\r\n\r\n  reader.readAsText(e.target.files[0]);\r\n}\r\n\r\nconst MenuRight = ({ onShowStats }) => {\r\n  var data =\r\n    \"text/json;charset=utf-8,\" +\r\n    encodeURIComponent(localStorage.getItem(\"logged_data\"));\r\n\r\n  return (\r\n    <Menu.Menu position=\"right\">\r\n      <Menu.Item content=\"Stats\" onClick={onShowStats} />\r\n      <Menu.Item as=\"label\" htmlFor=\"file\" className=\"ui icon button\">\r\n        Import\r\n        <input\r\n          type=\"file\"\r\n          id=\"file\"\r\n          style={{ display: \"none\" }}\r\n          onChange={handleFileSelected}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        as=\"a\"\r\n        href={\"data:\" + data}\r\n        download=\"rootlogger_data.json\"\r\n        content=\"Export\"\r\n      />\r\n    </Menu.Menu>\r\n  );\r\n};\r\n\r\nexport default RootMenu;\r\n","import React, { Component } from \"react\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport RootMenu from \"./RootMenu\";\r\n\r\nconst rootLogo =\r\n  \"https://cf.geekdo-images.com/imagepage/img/RhpM7ioEqBhBuSOwMpN5Vcqcztk=/fit-in/900x600/filters:no_upscale()/pic3791326.jpg\";\r\nconst vastLogo =\r\n  \"https://cf.geekdo-images.com/imagepage/img/d_-BA8wyApUR45GfQFcAKYulbOU=/fit-in/900x600/filters:no_upscale()/pic2962290.jpg\";\r\n\r\nclass RootIntro extends Component {\r\n  chooseLogo() {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return rootLogo;\r\n      case \"vast\":\r\n        return vastLogo;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { game, onSelectGame, onShowStats } = this.props;\r\n    return [\r\n      <Image key=\"logo\" centered size=\"medium\" src={this.chooseLogo()} />,\r\n      <RootMenu\r\n        key=\"menu\"\r\n        game={game}\r\n        onSelectGame={onSelectGame}\r\n        onShowStats={onShowStats}\r\n      />\r\n    ];\r\n  }\r\n}\r\n\r\nexport default RootIntro;\r\n","import React, { Component } from \"react\";\r\nimport { Divider, Feed } from \"semantic-ui-react\";\r\n\r\nconst factionsOptions = [\r\n  { key: \"mc\", value: \"mc\", text: \"Marquise de Cat\" },\r\n  { key: \"ed\", value: \"ed\", text: \"Eyrie Dynasties\" },\r\n  { key: \"wa\", value: \"wa\", text: \"Woodland Alliance\" },\r\n  { key: \"vb\", value: \"vb\", text: \"Vagabond\" },\r\n  { key: \"lc\", value: \"lc\", text: \"Lizard Cult\" },\r\n  { key: \"rc\", value: \"rc\", text: \"Riverfolk Company\" },\r\n  { key: \"cc\", value: \"cc\", text: \"Corvid Conspiracy\" },\r\n  { key: \"gc\", value: \"gc\", text: \"The Great Dutchy\" }\r\n];\r\n\r\nconst charactersOptions = [\r\n  { key: \"kn\", value: \"kn\", text: \"Knight\" },\r\n  { key: \"pa\", value: \"pa\", text: \"Paladin\" },\r\n  { key: \"gb\", value: \"gb\", text: \"Goblins\" },\r\n  { key: \"sk\", value: \"sk\", text: \"Skeletons\" },\r\n  { key: \"dg\", value: \"dg\", text: \"Dragon\" },\r\n  { key: \"sp\", value: \"sp\", text: \"Spider\" },\r\n  { key: \"cv\", value: \"cv\", text: \"Cave\" },\r\n  { key: \"mn\", value: \"mn\", text: \"Manor\" },\r\n  { key: \"tf\", value: \"tf\", text: \"Thief\" },\r\n  { key: \"ec\", value: \"ec\", text: \"Enchanter\" }\r\n];\r\n\r\nfunction choosePlayers(logged_data) {\r\n  switch (logged_data.game) {\r\n    case \"root\":\r\n      return factionsOptions;\r\n    case \"vast\":\r\n      return charactersOptions;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nfunction winner(logged_data) {\r\n  const searchWinner = choosePlayers(logged_data).find(\r\n    player => player.value === logged_data.winner\r\n  );\r\n  return typeof searchWinner == \"undefined\" ? { text: \"No one\" } : searchWinner;\r\n}\r\n\r\nconst Event = ({ logged_data }) => {\r\n  const playedFactionsLength =\r\n    typeof logged_data.played_factions == \"undefined\"\r\n      ? \".\"\r\n      : \" of \" + logged_data.played_factions.length + \" players.\";\r\n\r\n  const message =\r\n    winner(logged_data).text + \" won a game\" + playedFactionsLength;\r\n\r\n  const current_time = new Date();\r\n  const logged_time = new Date(logged_data.date);\r\n  const time_elapsed = current_time - logged_time;\r\n  const days_elapsed = Math.floor(time_elapsed / 1000 / 60 / 60 / 24);\r\n\r\n  return (\r\n    <Feed.Event>\r\n      <Feed.Content>\r\n        <Feed.Summary content={message} date={days_elapsed + \" days ago\"} />\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  );\r\n};\r\n\r\nclass RootFeed extends Component {\r\n  state = {\r\n    data: JSON.parse(localStorage.getItem(\"logged_data\")) || []\r\n  };\r\n\r\n  render() {\r\n    const divider =\r\n      typeof this.state.data !== \"undefined\" && this.state.data.length > 0 ? (\r\n        <Divider />\r\n      ) : null;\r\n\r\n    return (\r\n      <>\r\n        {divider}\r\n        <Feed>\r\n          {this.state.data.map((play, index) => (\r\n            <Event key={index} logged_data={play} />\r\n          ))}\r\n        </Feed>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootFeed;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Message } from \"semantic-ui-react\";\r\n\r\nconst factionsOptions = [\r\n  { key: \"mc\", value: \"mc\", text: \"Marquise de Cat\" },\r\n  { key: \"ed\", value: \"ed\", text: \"Eyrie Dynasties\" },\r\n  { key: \"wa\", value: \"wa\", text: \"Woodland Alliance\" },\r\n  { key: \"vb\", value: \"vb\", text: \"Vagabond\" },\r\n  { key: \"lc\", value: \"lc\", text: \"Lizard Cult\" },\r\n  { key: \"rc\", value: \"rc\", text: \"Riverfolk Company\" },\r\n  { key: \"cc\", value: \"cc\", text: \"Corvid Conspiracy\" },\r\n  { key: \"gc\", value: \"gc\", text: \"The Great Dutchy\" }\r\n];\r\n\r\nconst rootMapOptions = [\r\n  { key: \"d\", value: \"d\", text: \"Default\" },\r\n  { key: \"w\", value: \"w\", text: \"Winter\" },\r\n  { key: \"m\", value: \"m\", text: \"Mountain\" },\r\n  { key: \"l\", value: \"l\", text: \"Lake\" }\r\n];\r\n\r\nconst rootDeckOptions = [\r\n  { key: \"d\", value: \"d\", text: \"Default\" },\r\n  { key: \"ep\", value: \"ep\", text: \"Exiles & Partisans\" }\r\n];\r\n\r\nconst charactersOptions = [\r\n  { key: \"kn\", value: \"kn\", text: \"Knight\" },\r\n  { key: \"pa\", value: \"pa\", text: \"Paladin\" },\r\n  { key: \"gb\", value: \"gb\", text: \"Goblins\" },\r\n  { key: \"sk\", value: \"sk\", text: \"Skeletons\" },\r\n  { key: \"dg\", value: \"dg\", text: \"Dragon\" },\r\n  { key: \"sp\", value: \"sp\", text: \"Spider\" },\r\n  { key: \"cv\", value: \"cv\", text: \"Cave\" },\r\n  { key: \"mn\", value: \"mn\", text: \"Manor\" },\r\n  { key: \"tf\", value: \"tf\", text: \"Thief\" },\r\n  { key: \"ec\", value: \"ec\", text: \"Enchanter\" }\r\n];\r\n\r\nclass RootForm extends Component {\r\n  state = {\r\n    date: \"\",\r\n    deck: null,\r\n    map: null,\r\n    options: factionsOptions,\r\n    searchQuery: null,\r\n    value: null,\r\n    winner: null\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.game !== prevProps.game) {\r\n      this.setState({\r\n        deck: null,\r\n        map: null,\r\n        options: this.chooseOptions(),\r\n        played_factions: [],\r\n        searchQuery: null,\r\n        value: null,\r\n        winner: null\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\r\n  handleChangeFactions = (e, { value }) => {\r\n    var selected_factions = [];\r\n    value.forEach(v => {\r\n      const match = this.state.options.find(f => f.key === v);\r\n      selected_factions.push(match);\r\n      return match;\r\n    });\r\n    this.setState({ played_factions: value, value: selected_factions });\r\n  };\r\n  handleSearchChange = (e, { searchQuery }) => this.setState({ searchQuery });\r\n\r\n  handleSubmit = () => {\r\n    const state_copy = { ...this.state, game: this.props.game };\r\n    delete state_copy.options;\r\n    delete state_copy.searchQuery;\r\n    delete state_copy.value;\r\n\r\n    const data_stored = JSON.parse(localStorage.getItem(\"logged_data\")) || [];\r\n    data_stored.push(state_copy);\r\n    localStorage.setItem(\"logged_data\", JSON.stringify(data_stored));\r\n\r\n    this.setState({\r\n      date: \"\",\r\n      deck: null,\r\n      map: null,\r\n      options: this.chooseOptions(),\r\n      played_factions: [],\r\n      searchQuery: null,\r\n      value: null,\r\n      winner: null\r\n    });\r\n  };\r\n\r\n  chooseOptions = () => {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return factionsOptions;\r\n      case \"vast\":\r\n        return charactersOptions;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  chooseTypeName = () => {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return \"Factions\";\r\n      case \"vast\":\r\n        return \"Characters\";\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { deck, map, options, played_factions, value, winner } = this.state;\r\n    const capitalizedGameName =\r\n      this.props.game[0].toUpperCase() + this.props.game.slice(1);\r\n    const headerMessage = `Welcome to ${capitalizedGameName} Logger!`;\r\n    const typeName = this.chooseTypeName();\r\n    const typePlaceHolder = `Select the ${typeName}`;\r\n\r\n    return (\r\n      <>\r\n        <Message\r\n          attached\r\n          header={headerMessage}\r\n          content=\"Fill out the form below to log your play\"\r\n        />\r\n        <Form className=\"attached fluid segment\" onSubmit={this.handleSubmit}>\r\n          <Form.Input\r\n            label=\"Date\"\r\n            fluid\r\n            type=\"datetime-local\"\r\n            name=\"date\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <Form.Dropdown\r\n            label={typeName}\r\n            fluid\r\n            selection\r\n            multiple\r\n            search\r\n            options={options}\r\n            value={played_factions}\r\n            placeholder={typePlaceHolder}\r\n            onChange={this.handleChangeFactions}\r\n            onSearchChange={this.handleSearchChange}\r\n          />\r\n          <Form.Dropdown\r\n            label=\"Winner\"\r\n            fluid\r\n            selection\r\n            search\r\n            options={value}\r\n            value={winner}\r\n            name=\"winner\"\r\n            placeholder=\"Select the Winner\"\r\n            onChange={this.handleChange}\r\n            onSearchChange={this.handleSearchChange}\r\n          />\r\n          {this.props.game === \"root\" && (\r\n            <>\r\n              <Form.Dropdown\r\n                label=\"Map\"\r\n                fluid\r\n                selection\r\n                search\r\n                options={rootMapOptions}\r\n                value={map}\r\n                name=\"map\"\r\n                placeholder=\"Select the Map\"\r\n                onChange={this.handleChange}\r\n                onSearchChange={this.handleSearchChange}\r\n              />\r\n              <Form.Dropdown\r\n                label=\"Deck\"\r\n                fluid\r\n                selection\r\n                search\r\n                options={rootDeckOptions}\r\n                value={deck}\r\n                name=\"deck\"\r\n                placeholder=\"Select the Deck\"\r\n                onChange={this.handleChange}\r\n                onSearchChange={this.handleSearchChange}\r\n              />\r\n            </>\r\n          )}\r\n          <Form.Button type=\"submit\">Submit</Form.Button>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootForm;\r\n","import React, { Component } from \"react\";\r\nimport { VictoryContainer, VictoryPie } from \"victory\";\r\n\r\nconst factionsOptions = [\r\n  { key: \"mc\", value: \"mc\", text: \"Marquise de Cat\", color: \"EC7A21\" },\r\n  { key: \"ed\", value: \"ed\", text: \"Eyrie Dynasties\", color: \"26447D\" },\r\n  { key: \"wa\", value: \"wa\", text: \"Woodland Alliance\", color: \"60B657\" },\r\n  { key: \"vb\", value: \"vb\", text: \"Vagabond\", color: \"8A8987\" },\r\n  { key: \"lc\", value: \"lc\", text: \"Lizard Cult\", color: \"F4EF6F\" },\r\n  { key: \"rc\", value: \"rc\", text: \"Riverfolk Company\", color: \"#FFF59D\" },\r\n  { key: \"cc\", value: \"cc\", text: \"Corvid Conspiracy\", color: \"56489F\" },\r\n  { key: \"gc\", value: \"gc\", text: \"The Great Dutchy\", color: \"CA8245\" }\r\n];\r\n\r\nconst charactersOptions = [\r\n  { key: \"kn\", value: \"kn\", text: \"Knight\", color: \"#DDAB28\" },\r\n  { key: \"pa\", value: \"pa\", text: \"Paladin\", color: \"#997E19\" },\r\n  { key: \"gb\", value: \"gb\", text: \"Goblins\", color: \"6FBF4B\" },\r\n  { key: \"sk\", value: \"sk\", text: \"Skeletons\", color: \"0A4721\" },\r\n  { key: \"dg\", value: \"dg\", text: \"Dragon\", color: \"CF202E\" },\r\n  { key: \"sp\", value: \"sp\", text: \"Spider\", color: \"8D0103\" },\r\n  { key: \"cv\", value: \"cv\", text: \"Cave\", color: \"5F2E7E\" },\r\n  { key: \"mn\", value: \"mn\", text: \"Manor\", color: \"511471\" },\r\n  { key: \"tf\", value: \"tf\", text: \"Thief\", color: \"777679\" },\r\n  { key: \"ec\", value: \"ec\", text: \"Enchanter\", color: \"787A77\" }\r\n];\r\n\r\nclass RootStats extends Component {\r\n  state = {\r\n    data: JSON.parse(localStorage.getItem(\"logged_data\")) || []\r\n  };\r\n\r\n  chooseOptions = () => {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return factionsOptions;\r\n      case \"vast\":\r\n        return charactersOptions;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  getCurrentGamePlays = () => {\r\n    return this.state.data.filter(\r\n      logged_play => logged_play.game === this.props.game\r\n    );\r\n  };\r\n\r\n  countWinners = () => {\r\n    const options = this.chooseOptions();\r\n\r\n    return this.removeZeros(\r\n      options.map(faction => {\r\n        var count_wins = this.getCurrentGamePlays().filter(\r\n          log => log.winner === faction.value\r\n        ).length;\r\n        return { x: faction.text, y: count_wins, fill: faction.color };\r\n      })\r\n    );\r\n  };\r\n\r\n  removeZeros(log) {\r\n    return log.filter(element => element.y > 0);\r\n  }\r\n\r\n  handleClick = () => [\r\n    {\r\n      target: \"data\",\r\n      mutation: props => {\r\n        const stroke = props.style && props.style.stroke;\r\n        return stroke === \"#c43a31\"\r\n          ? null\r\n          : {\r\n              style: { stroke: \"#c43a31\", fill: props.style.fill }\r\n            };\r\n      }\r\n    },\r\n    {\r\n      target: \"labels\",\r\n      mutation: props =>\r\n        props.text === props.datum.y ? null : { text: props.datum.y }\r\n    }\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <VictoryPie\r\n        width={550}\r\n        containerComponent={<VictoryContainer />}\r\n        data={this.countWinners()}\r\n        events={[\r\n          {\r\n            target: \"data\",\r\n            eventHandlers: {\r\n              onClick: this.handleClick\r\n            }\r\n          }\r\n        ]}\r\n        style={{ data: { fill: d => d.fill } }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootStats;\r\n","import React, { Component } from \"react\";\r\nimport RootIntro from \"./RootIntro\";\r\nimport RootFeed from \"./RootFeed\";\r\nimport RootForm from \"./RootForm\";\r\nimport RootStats from \"./RootStats\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nclass App extends Component {\r\n  state = { selectedgame: \"root\", showStats: false };\r\n\r\n  handleSelectGame = (e, { name }) => this.setState({ selectedgame: name });\r\n  handleShowStats = e => this.setState({ showStats: !this.state.showStats });\r\n\r\n  render() {\r\n    var content = this.state.showStats ? (\r\n      <RootStats game={this.state.selectedgame} />\r\n    ) : (\r\n      <>\r\n        <RootForm game={this.state.selectedgame} />\r\n        <RootFeed />\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <Container>\r\n        <RootIntro\r\n          game={this.state.selectedgame}\r\n          onSelectGame={this.handleSelectGame}\r\n          onShowStats={this.handleShowStats}\r\n        />\r\n        {content}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}