{"version":3,"sources":["RootMenu.js","RootIntro.js","RootForm.js","App.js","serviceWorker.js","index.js"],"names":["RootMenu","_this$props","this","props","game","onSelectGame","react_default","a","createElement","Menu","Item","as","href","content","name","active","onClick","Component","RootIntro","Image","centered","size","src","src_RootMenu","factionsOptions","key","value","text","charactersOptions","RootForm","state","options","searchQuery","winner","handleWinner","e","_ref","_this","setState","handleChangeFactions","_ref2","selected_factions","coise","forEach","v","match","find","f","push","console","log","played_factions","handleSearchChange","_ref3","toggleSearch","search","target","checked","chooseOptions","prevProps","_this$state","Form","Dropdown","fluid","selection","multiple","placeholder","onChange","onSearchChange","Button","type","App","selectedgame","handleSelectGame","Container","src_RootIntro","src_RootForm","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5ffbdba5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nclass RootMenu extends Component {\r\n  render() {\r\n    const { game, onSelectGame } = this.props;\r\n\r\n    return (\r\n      <Menu>\r\n        <Menu.Item as=\"a\" href=\"http://root.livingrules.io/\" content=\"Rules\" />\r\n\r\n        <Menu.Item\r\n          name=\"root\"\r\n          active={game === \"root\"}\r\n          content=\"Root\"\r\n          onClick={onSelectGame}\r\n        />\r\n\r\n        <Menu.Item\r\n          name=\"vast\"\r\n          active={game === \"vast\"}\r\n          content=\"Vast\"\r\n          onClick={onSelectGame}\r\n        />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootMenu;\r\n","import React, { Component } from \"react\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport RootMenu from \"./RootMenu\";\r\n\r\nclass RootIntro extends Component {\r\n  render() {\r\n    return [\r\n      <Image\r\n        centered\r\n        size=\"medium\"\r\n        src=\"https://cf.geekdo-images.com/imagepage/img/RhpM7ioEqBhBuSOwMpN5Vcqcztk=/fit-in/900x600/filters:no_upscale()/pic3791326.jpg\"\r\n      />,\r\n      <RootMenu game={this.props.game} onSelectGame={this.props.onSelectGame} />\r\n    ];\r\n  }\r\n}\r\n\r\nexport default RootIntro;\r\n","import React, { Component } from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\n\r\nconst factionsOptions = [\r\n  { key: \"mc\", value: \"mc\", text: \"Marquise de Cat\" },\r\n  { key: \"ed\", value: \"ed\", text: \"Eyrie Dynasties\" },\r\n  { key: \"wa\", value: \"wa\", text: \"Woodland Alliance\" },\r\n  { key: \"vb\", value: \"vb\", text: \"Vagabond\" },\r\n  { key: \"lc\", value: \"lc\", text: \"Lizard Cult\" },\r\n  { key: \"rc\", value: \"rc\", text: \"Riverfolk Company\" }\r\n];\r\n\r\nconst charactersOptions = [\r\n  { key: \"kn\", value: \"kn\", text: \"Knight\" },\r\n  { key: \"pa\", value: \"pa\", text: \"Paladin\" },\r\n  { key: \"gb\", value: \"gb\", text: \"Goblins\" },\r\n  { key: \"sk\", value: \"sk\", text: \"Skeletons\" },\r\n  { key: \"dg\", value: \"dg\", text: \"Dragon\" },\r\n  { key: \"sp\", value: \"sp\", text: \"Spider\" },\r\n  { key: \"cv\", value: \"cv\", text: \"Cave\" },\r\n  { key: \"mn\", value: \"mn\", text: \"Manor\" },\r\n  { key: \"tf\", value: \"tf\", text: \"Thief\" },\r\n  { key: \"ec\", value: \"ec\", text: \"Enchanter\" }\r\n];\r\n\r\nclass RootForm extends Component {\r\n  state = {\r\n    options: factionsOptions,\r\n    searchQuery: null,\r\n    value: null,\r\n    winner: null\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.game !== prevProps.game) {\r\n      this.setState({\r\n        options: this.chooseOptions(),\r\n        played_factions: [],\r\n        searchQuery: null,\r\n        value: null,\r\n        winner: null\r\n      });\r\n    }\r\n  }\r\n\r\n  handleWinner = (e, { value }) => this.setState({ winner: value });\r\n  handleChangeFactions = (e, { value }) => {\r\n    var selected_factions = [];\r\n    var coise = value.forEach(v => {\r\n      const match = this.state.options.find(f => f.key === v);\r\n      selected_factions.push(match);\r\n      return match;\r\n    });\r\n    console.log(coise);\r\n    this.setState({ played_factions: value, value: selected_factions });\r\n  };\r\n  handleSearchChange = (e, { searchQuery }) => this.setState({ searchQuery });\r\n\r\n  toggleSearch = e => this.setState({ search: e.target.checked });\r\n\r\n  chooseOptions = () => {\r\n    switch (this.props.game) {\r\n      case \"root\":\r\n        return factionsOptions;\r\n      case \"vast\":\r\n        return charactersOptions;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { options, played_factions, value, winner } = this.state;\r\n\r\n    return (\r\n      <Form>\r\n        <Form.Dropdown\r\n          fluid\r\n          selection\r\n          multiple\r\n          search\r\n          options={options}\r\n          value={played_factions}\r\n          placeholder=\"Select the Factions\"\r\n          onChange={this.handleChangeFactions}\r\n          onSearchChange={this.handleSearchChange}\r\n        />\r\n        <Form.Dropdown\r\n          fluid\r\n          selection\r\n          search\r\n          options={value}\r\n          value={winner}\r\n          placeholder=\"Select the Winner\"\r\n          onChange={this.handleWinner}\r\n          onSearchChange={this.handleSearchChange}\r\n        />\r\n        <Form.Button type=\"submit\">Submit</Form.Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RootForm;\r\n","import React, { Component } from \"react\";\r\nimport RootIntro from \"./RootIntro\";\r\nimport RootForm from \"./RootForm\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nclass App extends Component {\r\n  state = { selectedgame: \"root\" };\r\n\r\n  handleSelectGame = (e, { name }) => this.setState({ selectedgame: name });\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <RootIntro\r\n          game={this.state.selectedgame}\r\n          onSelectGame={this.handleSelectGame}\r\n        />\r\n        <RootForm game={this.state.selectedgame} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}